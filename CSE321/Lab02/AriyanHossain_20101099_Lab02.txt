Name: Ariyan Hossain
ID: 20101099
Sec: 08

CSE321 LAB

Lab Assignment 2:

Task 1:

#!/bin/bash

total=0
for ((i=0;i<10;i++))
do
  echo "Enter a number:"
  read n
  if [ $((n%2)) == 0 -a $((n%8)) != 0 ];
    then total=$(($total+n))
  fi
done
echo "The sum of those integers which are multiple of 2 but not multiple of 8 is" $total

Task 2:

#!/bin/bash

echo "Enter a number:"
read n

a=$((n%4))
b=$((n%5))
c=$((n%10))
d=$((n%6))
e=$((n%30))

if [ $a != 0 -a $b != 0 -a $c == 0 ];
  then echo "Rasengan"
fi
if [ $b == 0 -o $d == 0 -a $e != 0 ];
  then if [ $e != 0 ];
    then echo "Oodama Rasengan"
  fi
fi
if [ $e == 0 ];
  then echo "Rasen Shuriken"
fi

Task 3:

#!/bin/bash

HappyNumber(){
  num=$1
  rem=0 #remainder
  sum=0
  while [ $num -gt 0 ];
  do
    rem=$(($num % 10)) 
    remrem=$(($rem * $rem))
    sum=$(($sum + $remrem))
    num=$(($num / 10))
  done
  return $sum
}

isPrime(){
  for((i=2; i<=num/2; i++))
  do
    if [ $((num%i)) -eq 0 ]
    then
      return 0 #not prime as divisible
      exit
    fi
  done
  if [ $num -lt 2 ] 
  then
    return 0 #numbers below 2 are not prime
  else
    return 1 #prime
  fi
}

echo "Enter a number:"
read num
result=$num

isPrime $num
prime=$?

if [ $prime == 1 ]; #if it is prime
  then
  while [ $result != 1 -a $result != 4 ]; 
  do
      HappyNumber $result
      result=$?
  done
  if [ $result == 1 ]; #1 means happy
    then echo "Happy Prime"
  elif [ $result == 4 ]; #4 means unhappy
    then echo "Not a Happy Prime"
  fi
elif [ $prime == 0 ]; #if it is not a prime
  then echo "Not a Happy Prime"
fi

Task4:

#!/bin/bash

echo "Enter a number:"
read n1

echo "Enter a number:"
read n2

echo "Enter a number:"
read n3

subtraction(){
  result=$(($1-$2))
  return $result
}

addition(){
  result=$(($1+$2))
  return $result
}

multiplication(){
  result=$(($1*$2))
  return $result
}

if [ $n1 -gt $n2 ];
  then subtraction $n1 $n2
  echo "The subtraction is "$?
fi
if [ $n3 -lt $n2 ];
  then addition $n3 $n2
  echo "The addition is "$?
fi
if [ $n2 == $n3 ];
  then multiplication $n2 $n3
  echo "The multiplication is "$?
fi

Task 5:

#!/bin/bash

#bubble sort -  repeatedly swapping the adjacent elements if they are in wrong order.
my_list=($*)  #list of inputs given by user
len=${#my_list[@]}
for ((i = 0; i<$len; i++))
do    
  for((j = 0; j<$len-i-1; j++))
  do  
    if [ ${my_list[j]} -gt ${my_list[$((j+1))]} ];
    then
      temp=${my_list[j]}
      my_list[$j]=${my_list[$((j+1))]}  
      my_list[$((j+1))]=$temp
    fi
  done
done

echo ${my_list[*]}
